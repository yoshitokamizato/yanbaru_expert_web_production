@import url("https://fonts.googleapis.com/css2?family=Noto+Sans+JP:wght@700&family=Roboto:wght@500;700;900&display=swap");

* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
  list-style: none;
  text-decoration: none;
}

body {
  font-family: "Noto Sans JP", sans-serif;
}

img {
  max-width: 100%;
  height: auto;
  vertical-align: bottom;
}


// 応用(将来的には慣れてほしい)
$breakpoint-down: (
  's-size': 'screen and (max-width: 375px)',
  'm-size': 'screen and (max-width: 860px)'
) !default;

// map-getと@contentでメディアクエリを使いやすい形にしています
@mixin mq-down($breakpoint: m-size) {
  @media #{map-get($breakpoint-down, $breakpoint)} {
    @content;
  }
}

// フォント部分の共通部分作成
@mixin font(
  $size: 16px,
  $weight: 700,
  $color: #333,
  $space: 0.1em,
  $line-height: 1,
  $text-align: center
) {
  font-size: $size;
  font-weight: $weight;
  color: $color;
  letter-spacing: $space;
  line-height: $line-height;
  text-align: $text-align;
}

// h2要素の共通部分作成
h2 {
  // 「フォント部分の共通部分」から引用
  @include font($size: 24px, $color: #333);
  // 他の要素と違う部分を下記に作成
  margin-bottom: 40px;
  @include mq-down(){
    font-size: 14px;
  }
  &::before {
    content: "";
    display: block;
    font-family: "Roboto", sans-serif;
    font-size: calc(1em + 40px);
    font-weight: 900;
    letter-spacing: 0.05em;
  }
  &::after {
    content: "";
    display: block;
    width: 40px;
    height: 40px;
    border-radius: 50%;
    background-color: #007bb4;
    margin: 40px auto 0;
    @include mq-down(){
      width: 29px;
      height: 29px;
    }
  }
}

// h3要素の共通部分作成
h3 {
  @include font($size: 24px, $space: 0, $weight: 500);
  font-family: "Roboto", sans-serif;
  @include mq-down(){
    font-size: 20px;
  }
}

// h4要素の共通部分作成
h4 {
  @include font($size: 48px, $color: #007bb4, $space: 0, $weight: 900);
  font-family: "Roboto", sans-serif;
}

// p要素の共通部分作成
p {
  @include font($line-height: 1.5, $weight: 700, $space: 0);
}

// セクション部分の共通部分作成
@mixin section($top: 80px, $bottom: 80px) {
  // 1セクションなのでデフォルト設定は意味を成さないけれど、例題として作成
  padding: $top 0 $bottom;
  margin: 0 auto;
}

// card型の共通部分を作成
// カードは様々な形で使い回す可能性があるので基本的な方を作成しておく。
// デザインごとに設定の方法は異なるので注意
@mixin card(
  $max-width: 300px,
  $margin-lr: 10px,
  $padding-top: 20px,
  $padding-lr: 20px,
  $padding-bottom: 20px
) {
  width: 100%;
  max-width: $max-width;
  margin: 0 $margin-lr;
  padding: $padding-top $padding-lr $padding-bottom;
  display: flex;
  // カードの「中身」を縦並びの準備
  flex-direction: column;
}

// CTAの部分は一括でクラスで管理。CTAは同じ使い回しを同じページ内でよくするので1つ型を作成しておけばOK
.cta-container {
  max-width: 830px;
  margin: 0 auto;
  // 背景の女性を「背景画像」として処理する方針。
  background-image: url(images/cta-img.png);
  background-size: 281px;
  background-repeat: no-repeat;
  background-position: bottom right;
  @include mq-down(){
    background-image: none;
  }
  h3 {
    span {
      // 6pxだけ常に小さいのでcalc関数で計算
      font-size: calc(1em - 6px);
    }
    &::after {
      content: "期間限定";
      display: block;
      // ファミリーの再上書き
      font-family: "Noto Sans JP", sans-serif;
      font-weight: 700;
      font-size: 2em;
      margin-top: 4px;
    }
  }
  // a要素をmixinで作成してもいいが、共通化しにくいので割愛
  a {
    display: flex;
    justify-content: center;
    align-items: center;
    width: 100%;
    max-width: 398px;
    height: 106px;
    font-size: 24px;
    font-weight: 700;
    line-height: 1.5;
    color: #f5f5f5;
    background-color: #ffa350;
    margin: 32px auto 0;
    border-radius: 10px;
    box-shadow: 4px 4px 4px 0 rgba($color: #000000, $alpha: 0.15);
    @include mq-down(){
      font-size: 22px;
      height: 90px;
    }
    @include mq-down(s-size){
      font-size: 20px;
    }
    &::after {
      content: "\f138";
      // FontAwesomeをよく使うならbodyなどに格納もあり
      font-family: "Font Awesome 5 Free";
      font-weight: 900;
      // marginを使いたかったのでinline-block化
      // アイコン使用時によくやります
      display: inline-block;
      margin-left: 16px;
    }
  }
  padding: 88px 0 44px;
}

#flow {
  @include section($bottom: 0);
  background-color: #f6f6f6;
  // 複数画像の設置方法
  // 複数の背景画像を配置したい場合は、「,(カンマ)」で区切って配置できます。
  // その際に他のbackground関連のプロパティも値の入れる順番を守ればそれぞれの背景画像に適応します。
  background-image: url(images/section-bg-top.svg),
    url(images/section-bg-bottom.svg);
  //「top right」が1枚目の背景画像で、「bottom left」が2枚目の背景画像に適応
  background-position: top right, bottom left;
  // 2つの画像に対して同じ値を適応させたい場合は、1つでOK
  background-repeat: no-repeat;
  @include mq-down(){
    //セクションの余白を固定ではなく可変性のある%で指定。
    //375pxの4%は15px
    padding-left: 4%;
    padding-right: 4%;
    background-image: none;
  }
  h2::before {
    content: "Flow";
  }
  ul {
    // このあと学習するグリッドレイアウトでも可
    display: flex;
    // フレックスアイテムの水平揃え(正確にはメイン軸)。
    justify-content: center;
    @include mq-down(){
      flex-direction: column;
    }
  }
  // 複雑な階層構造を設置したくないのでulでネストしない方針
  li {
    // カード型はよく使うので共通パーツ化してもいいですね
    @include card($padding-bottom: 24px);
    background-color: #fff;
    box-shadow: 4px 4px 4px 0 rgba($color: #000000, $alpha: 0.15);
    border-radius: 30px;
    @include mq-down(){
      max-width: 400px;
      margin: 0 auto;
      &:nth-of-type(n+2){
        //nth-of-typeを用いてmargin-bottomの当たる要素の範囲を指定
        //ちなみにnをマイナスにしたnth-of-type(-n+2){margin-bottom}もできるので実践してみましょう。
        margin-top: 40px;
      }
    }
    h4 {
      margin-bottom: 40px;
      &::before {
        content: "Flow";
        display: block;
        font-size: 16px;
        font-weight: 700;
        line-height: 1.5;
      }
    }
    p {
      //画像との最低のmarginの値を指定
      margin-bottom: 16px;
    }
    img {
      display: block;
      // marginの上をauto、下を0にしてカードの最下部の部品の位置を簡単に合わせる方法。
      margin: auto auto 0;
    }
  }
}
